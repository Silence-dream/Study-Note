{
  "title": "appleFarmAPI",
  "url": "https://www.google.com",
  "name": "appleFarm",
  "version": "0.1.0",
  "description": "API接口文档",
  "header": {
    "title": "My own header title",
    "content": "<h2>关于Apidoc</h2>\n<ul>\n<li>一个自动化的后端文档接口生成器</li>\n</ul>\n<h2>安装</h2>\n<pre class=\"prettyprint lang-powershell\">npm install apidoc -g #安装\napidoc -i myapp/ -o apidoc/ -t mytemplate/ #运行\n</pre>\n<h2>命令行接口参数</h2>\n<pre class=\"prettyprint lang-powershell\">apidoc -i 输入路径 -o 输出路径(默认为doc) # 剩下两个 -f和-t不常用,若用到请查阅官方文档\n</pre>\n<h2>配置apidoc.json</h2>\n<ul>\n<li>在根目录下面新建apidoc.json</li>\n</ul>\n<pre class=\"prettyprint lang-json\">{\n  \"name\": \"appleFarm\",                  //文档项目名\n  \"title\": \"appleFarmAPI\",              //html标题\n  \"description\":\"API接口文档\",           //文档描述\n  \"url\" : \"https://www.google.com\",     //接口前缀，可以为空\n  \"version\": \"0.1.0\",                   //文档版本\n  // 引入md文件玩耍\n  \"header\": {\n    \"title\": \"My own header title\",\n    \"filename\": \"readme.md\"\n  },\n  \"footer\": {\n    \"title\": \"My own footer title\",\n    \"filename\": \"readme.md\"\n  }\n}\n\n</pre>\n<h2>模板</h2>\n<ul>\n<li>生成文档需要在js代码中写入注释,让apidoc根据注释生成文档</li>\n<li>在 public 目录中新建 app.js 写入</li>\n</ul>\n<pre class=\"prettyprint lang-js\">const express = require(\"express\");\nconst app = express();\n/**\n * @api {post} /admin_login/  用户登录\n * @apiGroup  admin\n * @apiParam {Number}   account     账号（手机号）.\n * @apiParam {String}   pw  密码.\n * @apiSuccess {String} msg 详细信息.\n * @apiSuccess {Number} status 状态码（1：登录成功，2：密码或账号错误，3：参数验证失败）\n * @apiSuccess {Number} is_admin （身份标识：-1普通注册，0球员，1及以上，代表创建的球队个数）.\n * @apiSuccessExample {json} 成功时返回:\n * {\n * \"msg\": \"登录成功\",\n * \"status\": 1,\n * \"data\": {\n * \"user_id\": 4,\n * \"is_admin\": 2\n * }\n * }\n * @apiErrorExample {json} 错误时返回:\n * {\n *  code:500,\n *  msg:\"错误\"\n * }\n * @return \\think\\response\\Json\n * @throws \\think\\db\\exception\\DataNotFoundException\n * @throws \\think\\db\\exception\\ModelNotFoundException\n * @throws \\think\\exception\\DbException\n * \n */\n\napp.get(\"/admin\", (req, res) => {\n  res.send(\"接口文档\");\n});\n\n</pre>\n<h2>最后目录树</h2>\n<ul>\n<li>运行命令 apidoc -i public/</li>\n</ul>\n<pre class=\"prettyprint lang-js\">├─apidoc.json \t\t//配置文件\t\t\n├─package.json\n├─readme.md\n├─public\n|   ├─api\t\t\t//写 api代码的地方\n|   |  ├─app.js\n├─doc \t\t\t\t//生成的目录\n</pre>\n<h2>参加资料</h2>\n<p><a href=\"https://www.jianshu.com/p/7e1b057b047c/\">NodeJs - Express项目 自动生成API文档</a>\n<a href=\"https://juejin.im/post/6844903990606446605\">Apidoc的安装配置及使用</a>\n<a href=\"https://juejin.im/post/6844903554210070541#heading-2\">代码注释</a></p>\n"
  },
  "footer": {
    "title": "My own footer title",
    "content": "<h2>关于Apidoc</h2>\n<ul>\n<li>一个自动化的后端文档接口生成器</li>\n</ul>\n<h2>安装</h2>\n<pre class=\"prettyprint lang-powershell\">npm install apidoc -g #安装\napidoc -i myapp/ -o apidoc/ -t mytemplate/ #运行\n</pre>\n<h2>命令行接口参数</h2>\n<pre class=\"prettyprint lang-powershell\">apidoc -i 输入路径 -o 输出路径(默认为doc) # 剩下两个 -f和-t不常用,若用到请查阅官方文档\n</pre>\n<h2>配置apidoc.json</h2>\n<ul>\n<li>在根目录下面新建apidoc.json</li>\n</ul>\n<pre class=\"prettyprint lang-json\">{\n  \"name\": \"appleFarm\",                  //文档项目名\n  \"title\": \"appleFarmAPI\",              //html标题\n  \"description\":\"API接口文档\",           //文档描述\n  \"url\" : \"https://www.google.com\",     //接口前缀，可以为空\n  \"version\": \"0.1.0\",                   //文档版本\n  // 引入md文件玩耍\n  \"header\": {\n    \"title\": \"My own header title\",\n    \"filename\": \"readme.md\"\n  },\n  \"footer\": {\n    \"title\": \"My own footer title\",\n    \"filename\": \"readme.md\"\n  }\n}\n\n</pre>\n<h2>模板</h2>\n<ul>\n<li>生成文档需要在js代码中写入注释,让apidoc根据注释生成文档</li>\n<li>在 public 目录中新建 app.js 写入</li>\n</ul>\n<pre class=\"prettyprint lang-js\">const express = require(\"express\");\nconst app = express();\n/**\n * @api {post} /admin_login/  用户登录\n * @apiGroup  admin\n * @apiParam {Number}   account     账号（手机号）.\n * @apiParam {String}   pw  密码.\n * @apiSuccess {String} msg 详细信息.\n * @apiSuccess {Number} status 状态码（1：登录成功，2：密码或账号错误，3：参数验证失败）\n * @apiSuccess {Number} is_admin （身份标识：-1普通注册，0球员，1及以上，代表创建的球队个数）.\n * @apiSuccessExample {json} 成功时返回:\n * {\n * \"msg\": \"登录成功\",\n * \"status\": 1,\n * \"data\": {\n * \"user_id\": 4,\n * \"is_admin\": 2\n * }\n * }\n * @apiErrorExample {json} 错误时返回:\n * {\n *  code:500,\n *  msg:\"错误\"\n * }\n * @return \\think\\response\\Json\n * @throws \\think\\db\\exception\\DataNotFoundException\n * @throws \\think\\db\\exception\\ModelNotFoundException\n * @throws \\think\\exception\\DbException\n * \n */\n\napp.get(\"/admin\", (req, res) => {\n  res.send(\"接口文档\");\n});\n\n</pre>\n<h2>最后目录树</h2>\n<ul>\n<li>运行命令 apidoc -i public/</li>\n</ul>\n<pre class=\"prettyprint lang-js\">├─apidoc.json \t\t//配置文件\t\t\n├─package.json\n├─readme.md\n├─public\n|   ├─api\t\t\t//写 api代码的地方\n|   |  ├─app.js\n├─doc \t\t\t\t//生成的目录\n</pre>\n<h2>参加资料</h2>\n<p><a href=\"https://www.jianshu.com/p/7e1b057b047c/\">NodeJs - Express项目 自动生成API文档</a>\n<a href=\"https://juejin.im/post/6844903990606446605\">Apidoc的安装配置及使用</a>\n<a href=\"https://juejin.im/post/6844903554210070541#heading-2\">代码注释</a></p>\n"
  },
  "sampleUrl": false,
  "defaultVersion": "0.0.0",
  "apidoc": "0.3.0",
  "generator": {
    "name": "apidoc",
    "time": "2020-11-30T11:58:59.898Z",
    "url": "https://apidocjs.com",
    "version": "0.25.0"
  }
}
